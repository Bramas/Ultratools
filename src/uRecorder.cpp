/*
 * ----------------------------------------------------------------------------
 * "THE BEER-WARE LICENSE" (Revision 42):
 * Quentin Bramas <quentin@bramas.fr> wrote this file. As long as you retain this notice you
 * can do whatever you want with this stuff. If we meet some day, and you think
 * this stuff is worth it, you can buy me a beer in return Quentin Bramas
 *
 * "LICENCE BEERWARE" (Révision 42):
 * Quentin Bramas <quentin@bramas.fr> a créé ce fichier. Tant que vous conservez cet avertissement,
 * vous pouvez faire ce que vous voulez de ce truc. Si on se rencontre un jour et
 * que vous pensez que ce truc vaut le coup, vous pouvez me payer une bière en
 * retour. Quentin Bramas
 * ----------------------------------------------------------------------------
 */

#include <cmath>
#include <QKeyEvent>

#include "uAudioManager.h"
#include "uMidiManager.h"
#include "uRecorder.h"
#include "uShowSentenceWydget.h"
#include "editorwindow.h"

Recorder::Recorder(ShowSentenceWidget * showSentenceWidget)
{
    _isRecording = false;
    _showSentenceWidget = showSentenceWidget;

    connect(&UInputManager::Instance,SIGNAL(keyPressEvent(QKeyEvent *, ulong)),this,SLOT(onKeyPressEvent(QKeyEvent *, ulong)));
    connect(&UInputManager::Instance,SIGNAL(keyReleaseEvent(QKeyEvent *, ulong)),this,SLOT(onKeyReleaseEvent(QKeyEvent *, ulong)));
    connect(UMidiManager::getInstance(),SIGNAL(noteOnEvent(ulong,int)),this,SLOT(startNote(ulong,int)));
    connect(UMidiManager::getInstance(),SIGNAL(noteOffEvent(ulong,int)),this,SLOT(stopNote(ulong,int)));
}

int Recorder::getBeat(ulong time)
{
    if(UAudioManager::Instance.timestampToPosition(time))
        return std::lround(_showSentenceWidget->getLyrics()->timeToBeat(time));
    return _showSentenceWidget->currentBeat();
}

void Recorder::onKeyPressEvent(QKeyEvent * event, ulong time)
{
    if(event->key() == Qt::Key_Space)
    {
        return;
    }

    startNote(time, 0);
}

void Recorder::startNote(ulong time, int pitch)
{
    if (!_isRecording)
    {
        return;
    }

    stopNote(time, -1);

    int beat = getBeat(time);
    _currentWord = Word(NULL,beat,1,pitch);
    _currentWord.setText("");
}

void Recorder::onKeyReleaseEvent(QKeyEvent * /*event*/, ulong time)
{
    stopNote(time, 0);

   // if(UInputManager::Instance.isKeyPressed(Qt::Key_Space))// QMessageBox::warning(NULL,"","lol");
}

void Recorder::stopNote(ulong time, int pitch)
{
    if (_currentWord.getText().isNull())
        return;

    // -1 is a valid pitch but it will never be generated by midi or keyboard input
    if (pitch != -1 && _currentWord.getPitch() != pitch)
        return;

    int beat = getBeat(time);

    if(beat - _currentWord.getTime()>1)
        _currentWord.setLength(beat - _currentWord.getTime());

    _showSentenceWidget->getLyrics()->addWord(_currentWord);
    _currentWord = Word();


}

void Recorder::start()
{
    _isRecording = true;
}
void Recorder::stop()
{
    _isRecording = false;
}

